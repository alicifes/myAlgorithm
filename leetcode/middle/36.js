/**
 * @param {character[][]} board
 * @return {boolean}
 * @description 请你判断一个 9 x 9 的数独是否有效。只需要 根据以下规则 ，验证已经填入的数字是否有效即可。
数字 1-9 在每一行只能出现一次。
数字 1-9 在每一列只能出现一次。
数字 1-9 在每一个以粗实线分隔的 3x3 宫内只能出现一次。（请参考示例图）
注意：
一个有效的数独（部分已被填充）不一定是可解的。
只需要根据以上规则，验证已经填入的数字是否有效即可。
空白格用 '.' 表示。
 */
var isValidSudoku = function (board = [[]]) {
  //判断行
  for (let i = 0; i < 9; i++) {
    let cur = board[i].filter((item) => item !== ".");
    if (cur.length !== Array.from(new Set(cur)).length) {
      return false;
    }
  }
  //判断列
  for (let i = 0; i < 9; i++) {
    let arr = new Map();
    for (let j = 0; j < 9; j++) {
      if (arr.has(board[j][i]) && board[j][i] !== ".") {
        return false;
      }
      arr.set(board[j][i]);
    }
  }
  //判断块
  for (let i = 0; i < 3; i++) {
    for (let j = 0; j < 3; j++) {
      let arr = new Map();
      for (let k = 0; k < 3; k++) {
        for (let l = 0; l < 3; l++) {
          if (
            arr.has(board[k + 3 * i][l + 3 * j]) &&
            board[k + 3 * i][l + 3 * j] !== "."
          ) {
            return false;
          }
          arr.set(board[k + 3 * i][l + 3 * j]);
        }
      }
    }
  }
  return true;
};

console.log(
  isValidSudoku([
    [".", ".", "4", ".", ".", ".", "6", "3", "."],
    [".", ".", ".", ".", ".", ".", ".", ".", "."],
    ["5", ".", ".", ".", ".", ".", ".", "9", "."],
    [".", ".", ".", "5", "6", ".", ".", ".", "."],
    ["4", ".", "3", ".", ".", ".", ".", ".", "1"],
    [".", ".", ".", "7", ".", ".", ".", ".", "."],
    [".", ".", ".", "5", ".", ".", ".", ".", "."],
    [".", ".", ".", ".", ".", ".", ".", ".", "."],
    [".", ".", ".", ".", ".", ".", ".", ".", "."],
  ])
); //false

console.log(
  isValidSudoku([
    ["8", "3", ".", ".", "7", ".", ".", ".", "."],
    ["6", ".", ".", "1", "9", "5", ".", ".", "."],
    [".", "9", "8", ".", ".", ".", ".", "6", "."],
    ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
    ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
    ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
    [".", "6", ".", ".", ".", ".", "2", "8", "."],
    [".", ".", ".", "4", "1", "9", ".", ".", "5"],
    [".", ".", ".", ".", "8", ".", ".", "7", "9"],
  ])
);
